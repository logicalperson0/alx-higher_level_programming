Test cases for 7-base_geometry.py method
=========================================

Import the function to be tested:
	>>> bg = __import__('7-base_geometry').BaseGeometry

General cases and errors:
	>>> b = bg()
	>>> b.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	>>> b.area(90, 87)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 3 were given

	>>> b.area(44)
	Traceback (most recent call last):
	TypeError: area() takes 1 positional argument but 2 were given

	>>> b.integer_validator("name", "John")
	Traceback (most recent call last):
	TypeError: name must be an integer

	>>> b.integer_validator("age", 0)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

	>>> b.integer_validator("age", -19)
	Traceback (most recent call last):
	ValueError: age must be greater than 0

	>>> b.integer_validator("age", 19)

	>>> b.integer_validator("age")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'

	>>> b.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> b.integer_validator(, 90)
	Traceback (most recent call last):
	SyntaxError: invalid syntax

	>>> b.integer_validator("age", 90, 98, 99)
	Traceback (most recent call last):
	TypeError: integer_validator() takes 3 positional arguments but 5 were given

	>>> b.integer_validator("age", {67})
	Traceback (most recent call last):
	TypeError: age must be an integer

	>>> b.integer_validator("age", [67])
	Traceback (most recent call last):
	TypeError: age must be an integer

	>>> b.integer_validator("age", None)
	Traceback (most recent call last):
	TypeError: age must be an integer

	>>> b.integer_validator("age", '56')
	Traceback (most recent call last):
	TypeError: age must be an integer

	>>> b.integer_validator("age", (6,))
	Traceback (most recent call last):
	TypeError: age must be an integer
